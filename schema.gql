# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserRoleDto {
  id: ID
  roleDescription: String
  version: Int
}

type UserDto {
  id: ID
  firstName: String
  middleName: String
  secondName: String
  displayName: String
  username: String
  email: String
  phone: String
  rem: String
  role: UserRoleDto
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AgreementStatusDto {
  id: ID
  agreementStatusName: String
  style: String
  version: Int
}

type CityDto {
  id: ID
  cityName: String
  version: Int
}

type CustomerCategoryDto {
  id: ID
  customerCategoryName: String
  version: Int
}

type PaymentFormDto {
  id: ID
  paymentFormName: String
  version: Int
}

type SubjectCategoryDto {
  id: ID
  subjectCategoryName: String
  version: Int
}

type SubjectDto {
  id: ID
  subjectName: String
  subjectCategory: SubjectCategoryDto
  version: Int
}

type WhatAboutUsDto {
  id: ID
  whatAboutUsName: String
  version: Int
}

type CustomerDto {
  id: ID
  user: UserDto
  customerName: String
  subjectCategory: SubjectCategoryDto
  subject: SubjectDto
  phone: String
  email: String
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: String
  city: CityDto
  street: String
  apartment: String
  house: String
  customerCategory: CustomerCategoryDto
  paymentForm: PaymentFormDto
  companyName: String
  whatAboutUs: WhatAboutUsDto
  rem: String
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type DistrictDto {
  id: ID
  districtName: String
  city: CityDto
  version: Int
}

type FamilyStatusDto {
  id: ID
  familyStatusName: String
  version: Int
}

type QuarterDto {
  id: ID
  quarterName: String
  district: DistrictDto
  version: Int
}

type SocialStatusDto {
  id: ID
  socialStatusName: String
  version: Int
}

type WardDto {
  id: ID
  user: UserDto
  customer: CustomerDto
  wardName: String
  hbDate: DateTime
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  socialStatuses: [SocialStatusDto!]
  familyStatus: FamilyStatusDto
  city: CityDto
  district: DistrictDto
  quarter: QuarterDto
  street: String
  house: String
  apartment: String
  floor: String
  entrance: String
  phone: String
  doctorsReport: Boolean
  events: String
  rem: String
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type AgreementDto {
  id: ID
  agreementNumber: String
  agreementDate: DateTime
  user: UserDto
  customer: CustomerDto
  ward: WardDto
  agreementStatus: AgreementStatusDto
  rem: String
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type BonusCategoryDto {
  id: ID
  bonusCategoryName: String
  version: Int
}

type BonusDto {
  id: ID
  bonusCategory: BonusCategoryDto
  bonusName: String
  cost: Float
  rem: String
  isCurrentOffer: Boolean
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type EmployeeBonusDto {
  id: ID
  user: UserDto
  bonusDate: DateTime
  bonusCategory: BonusCategoryDto
  bonus: BonusDto
  cost: Float
  rem: String
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type PositionDto {
  id: ID
  positionName: String
  tariff: Float
  isCurrentOffer: Boolean
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type EmployeePositionDto {
  id: ID
  user: UserDto
  positionDateStart: DateTime
  positionDateEnd: DateTime
  position: PositionDto
  tariff: Float
  rem: String
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type EmployeeStatusDto {
  id: ID
  employeeStatusName: String
  isEmployeeGroup: Boolean
  isTimesheetGroup: Boolean
  version: Int
}

type OperationModeDto {
  id: ID
  operationModeName: String
  version: Int
}

type TypeJobDto {
  id: ID
  typeJobName: String
  version: Int
}

type EmployeeDto {
  id: ID
  user: UserDto
  employeeName: String
  hbDate: DateTime
  city: CityDto
  district: DistrictDto
  quarter: QuarterDto
  street: String
  house: String
  apartment: String
  education: String
  phone: String
  email: String
  passportNumber: String
  passportIssuedBy: String
  employeeStatus: EmployeeStatusDto
  operationMode: OperationModeDto
  typeJobs: [TypeJobDto!]
  rem: String
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type WardStageDto {
  id: ID
  wardStageName: String
}

type WardStageProgressDto {
  id: ID
  wardStageDate: DateTime
  wardStage: WardStageDto
  ward: WardDto
  rem: String
  version: Int
  createdAt: DateTime
  updatedAt: DateTime
}

type Query {
  user(id: Int!): UserDto

  """Поиск пользователей по ФИО и пагинация"""
  userList(textFilter: String, paging: Int!, page: Int!): [UserDto!]
  usersFind(ids: Int, usernames: String): [UserDto!]

  """Поиск социального статуса по id"""
  agreementStatus(id: Int!): AgreementStatusDto

  """Поиск социального статуса по наименованию и пагинация"""
  agreementStatusList(textFilter: String, paging: Int!, page: Int!): [AgreementStatusDto!]

  """Поиск договора по id"""
  agreement(id: Int!): AgreementDto

  """Поиск договора по номеру и пагинация"""
  agreementList(textFilter: String, paging: Int!, page: Int!): [AgreementDto!]

  """Поиск договоров по номерам (точное совпадение)"""
  agreementsNumbersFind(agreementNumber: String): [AgreementDto!]

  """Поиск социального статуса по id"""
  bonusCategory(id: Int!): BonusCategoryDto

  """Поиск социального статуса по наименованию и пагинация"""
  bonusCategoryList(textFilter: String, paging: Int!, page: Int!): [BonusCategoryDto!]

  """Поиск начисления или удержания по id"""
  bonus(id: Int!): BonusDto

  """Поиск начисления или удержания по наименованию и пагинация"""
  bonusList(textFilter: String, paging: Int!, page: Int!): [BonusDto!]

  """Поиск населённого пункта по id"""
  city(id: Int!): CityDto

  """Поиск населённого пункта по наименованию и пагинация"""
  cityList(textFilter: String, paging: Int!, page: Int!): [CityDto!]

  """Поиск категории клиента по id"""
  customerCategory(id: Int!): CustomerCategoryDto

  """Поиск категории клиента по наименованию и пагинация"""
  customerCategoryList(textFilter: String, paging: Int!, page: Int!): [CustomerCategoryDto!]

  """Поиск населённого пункта по id"""
  customer(id: Int!): CustomerDto

  """Поиск населённого пункта по наименованию и пагинация"""
  customerList(textFilter: String, paging: Int!, page: Int!): [CustomerDto!]

  """Поиск района по id"""
  district(id: Int!): DistrictDto

  """Поиск района по наименованию и пагинация"""
  districtList(textFilter: String, paging: Int!, page: Int!): [DistrictDto!]

  """Поиск НиУ по id"""
  employeeBonus(id: Int!): EmployeeBonusDto

  """Поиск НиУ по примечанию и пагинация"""
  employeeBonusList(textFilter: String, paging: Int!, page: Int!): [EmployeeBonusDto!]

  """Поиск социального статуса по id"""
  employeePosition(id: Int!): EmployeePositionDto

  """Поиск социального статуса по наименованию и пагинация"""
  employeePositionList(textFilter: String, paging: Int!, page: Int!): [EmployeePositionDto!]

  """Поиск статуса сотрудника по id"""
  employeeStatus(id: Int!): EmployeeStatusDto

  """Поиск статуса сотрудника по наименованию и пагинация"""
  employeeStatusList(textFilter: String, paging: Int!, page: Int!): [EmployeeStatusDto!]

  """Поиск сотрудника по id"""
  employee(id: Int!): EmployeeDto

  """Поиск сотрудника по имени и пагинация"""
  employeeList(textFilter: String, paging: Int!, page: Int!): [EmployeeDto!]

  """Поиск социального статуса по id"""
  familyStatus(id: Int!): FamilyStatusDto

  """Поиск социального статуса по наименованию и пагинация"""
  familyStatusList(textFilter: String, paging: Int!, page: Int!): [FamilyStatusDto!]

  """Поиск социального статуса по id"""
  operationMode(id: Int!): OperationModeDto

  """Поиск социального статуса по наименованию и пагинация"""
  operationModeList(textFilter: String, paging: Int!, page: Int!): [OperationModeDto!]

  """Поиск формы оплаты по id"""
  paymentForm(id: Int!): PaymentFormDto

  """Поиск формы оплаты по наименованию и пагинация"""
  paymentFormList(textFilter: String, paging: Int!, page: Int!): [PaymentFormDto!]

  """Поиск населённого пункта по id"""
  position(id: Int!): PositionDto

  """Поиск населённого пункта по наименованию и пагинация"""
  positionList(textFilter: String, paging: Int!, page: Int!): [PositionDto!]

  """Поиск квартала по id"""
  quarter(id: Int!): QuarterDto

  """Поиск квартала по наименованию и пагинация"""
  quarterList(textFilter: String, paging: Int!, page: Int!): [QuarterDto!]

  """Поиск социального статуса по id"""
  socialStatus(id: Int!): SocialStatusDto

  """Поиск социального статуса по наименованию и пагинация"""
  socialStatusList(textFilter: String, paging: Int!, page: Int!): [SocialStatusDto!]

  """Поиск категории субъекта по id"""
  subjectCategory(id: Int!): SubjectCategoryDto

  """Поиск категории субъекта по наименованию и пагинация"""
  subjectCategoryList(textFilter: String, paging: Int!, page: Int!): [SubjectCategoryDto!]

  """Поиск субъекта по id"""
  subject(id: Int!): SubjectDto

  """Поиск субъекта по наименованию и пагинация"""
  subjectList(textFilter: String, paging: Int!, page: Int!): [SubjectDto!]

  """Поиск социального статуса по id"""
  typeJob(id: Int!): TypeJobDto

  """Поиск социального статуса по наименованию и пагинация"""
  typeJobList(textFilter: String, paging: Int!, page: Int!): [TypeJobDto!]

  """Роль пользователя"""
  userRole(id: String!): UserRoleDto

  """Поиск роли пользователя по наименованию роли (id) и пагинация"""
  userRoleList(textFilter: String, paging: Int!, page: Int!): [UserRoleDto!]

  """Поиск группы ролей по [ids]"""
  userRolesFind(ids: String): [UserRoleDto!]

  """Поиск социального статуса по id"""
  wardStageProgress(id: Int!): WardStageProgressDto

  """Поиск социального статуса по wardId, наименованию и пагинация"""
  wardStageProgressList(wardId: Int, textFilter: String, paging: Int!, page: Int!): [WardStageProgressDto!]

  """Поиск социального статуса по id"""
  wardStage(id: Int!): WardStageDto

  """Поиск социального статуса по наименованию и пагинация"""
  wardStageList(textFilter: String, paging: Int!, page: Int!): [WardStageDto!]

  """Поиск подопечного по id"""
  ward(id: Int!): WardDto

  """Поиск подопечного по имени и пагинация"""
  wardList(textFilter: String, paging: Int!, page: Int!): [WardDto!]

  """Поиск населённого пункта по id"""
  whatAboutUs(id: Int!): WhatAboutUsDto

  """Поиск населённого пункта по наименованию и пагинация"""
  whatAboutUsList(textFilter: String, paging: Int!, page: Int!): [WhatAboutUsDto!]
}

type Mutation {
  userCreate(data: UserCreateInput!): UserDto!
  userUpdate(data: UserUpdateInput!): UserDto!
  userDelete(data: UserDeleteInput!): Int!
  agreementStatusCreate(data: AgreementStatusCreateInput!): AgreementStatusDto!
  agreementStatusUpdate(data: AgreementStatusUpdateInput!): AgreementStatusDto!
  agreementStatusDelete(data: AgreementStatusDeleteInput!): Int!
  agreementCreate(data: AgreementCreateInput!): AgreementDto!
  agreementUpdate(data: AgreementUpdateInput!): AgreementDto!
  agreementDelete(data: AgreementDeleteInput!): Int!
  bonusCategoryCreate(data: BonusCategoryCreateInput!): BonusCategoryDto!
  bonusCategoryUpdate(data: BonusCategoryUpdateInput!): BonusCategoryDto!
  bonusCategoryDelete(data: BonusCategoryDeleteInput!): Int!
  bonusCreate(data: BonusCreateInput!): BonusDto!
  bonusUpdate(data: BonusUpdateInput!): BonusDto!
  bonusDelete(data: BonusDeleteInput!): Int!
  cityCreate(data: CityCreateInput!): CityDto!
  cityUpdate(data: CityUpdateInput!): CityDto!
  cityDelete(data: CityDeleteInput!): Int!
  customerCategoryCreate(data: CustomerCategoryCreateInput!): CustomerCategoryDto!
  customerCategoryUpdate(data: CustomerCategoryUpdateInput!): CustomerCategoryDto!
  customerCategoryDelete(data: CustomerCategoryDeleteInput!): Int!
  customerCreate(data: CustomerCreateInput!): CustomerDto!
  customerUpdate(data: CustomerUpdateInput!): CustomerDto!
  customerDelete(data: CustomerDeleteInput!): Int!
  districtCreate(data: DistrictCreateInput!): DistrictDto!
  districtUpdate(data: DistrictUpdateInput!): DistrictDto!
  districtDelete(data: DistrictDeleteInput!): Int!
  employeeBonusCreate(data: EmployeeBonusCreateInput!): EmployeeBonusDto!
  employeeBonusUpdate(data: EmployeeBonusUpdateInput!): EmployeeBonusDto!
  employeeBonusDelete(data: EmployeeBonusDeleteInput!): Int!
  employeePositionCreate(data: EmployeePositionCreateInput!): EmployeePositionDto!
  employeePositionUpdate(data: EmployeePositionUpdateInput!): EmployeePositionDto!
  employeePositionDelete(data: EmployeePositionDeleteInput!): Int!
  employeeStatusCreate(data: EmployeeStatusCreateInput!): EmployeeStatusDto!
  employeeStatusUpdate(data: EmployeeStatusUpdateInput!): EmployeeStatusDto!
  employeeStatusDelete(data: EmployeeStatusDeleteInput!): Int!
  employeeCreate(data: EmployeeCreateInput!): EmployeeDto!
  employeeUpdate(data: EmployeeUpdateInput!): EmployeeDto!
  employeeDelete(data: EmployeeDeleteInput!): Int!
  familyStatusCreate(data: FamilyStatusCreateInput!): FamilyStatusDto!
  familyStatusUpdate(data: FamilyStatusUpdateInput!): FamilyStatusDto!
  familyStatusDelete(data: FamilyStatusDeleteInput!): Int!
  operationModeCreate(data: OperationModeCreateInput!): OperationModeDto!
  operationModeUpdate(data: OperationModeUpdateInput!): OperationModeDto!
  operationModeDelete(data: OperationModeDeleteInput!): Int!
  paymentFormCreate(data: PaymentFormCreateInput!): PaymentFormDto!
  paymentFormUpdate(data: PaymentFormUpdateInput!): PaymentFormDto!
  paymentFormDelete(data: PaymentFormDeleteInput!): Int!
  positionCreate(data: PositionCreateInput!): PositionDto!
  positionUpdate(data: PositionUpdateInput!): PositionDto!
  positionDelete(data: PositionDeleteInput!): Int!
  quarterCreate(data: QuarterCreateInput!): QuarterDto!
  quarterUpdate(data: QuarterUpdateInput!): QuarterDto!
  quarterDelete(data: QuarterDeleteInput!): Int!
  socialStatusCreate(data: SocialStatusCreateInput!): SocialStatusDto!
  socialStatusUpdate(data: SocialStatusUpdateInput!): SocialStatusDto!
  socialStatusDelete(data: SocialStatusDeleteInput!): Int!
  subjectCategoryCreate(data: SubjectCategoryCreateInput!): SubjectCategoryDto!
  subjectCategoryUpdate(data: SubjectCategoryUpdateInput!): SubjectCategoryDto!
  subjectCategoryDelete(data: SubjectCategoryDeleteInput!): Int!
  subjectCreate(data: SubjectCreateInput!): SubjectDto!
  subjectUpdate(data: SubjectUpdateInput!): SubjectDto!
  subjectDelete(data: SubjectDeleteInput!): Int!
  typeJobCreate(data: TypeJobCreateInput!): TypeJobDto!
  typeJobUpdate(data: TypeJobUpdateInput!): TypeJobDto!
  typeJobDelete(data: TypeJobDeleteInput!): Int!
  userRoleCreate(data: UserRoleCreateInput!): UserRoleDto!
  userRoleUpdate(data: UserRoleUpdateInput!): UserRoleDto!
  userRoleDelete(data: UserRoleDeleteInput!): Int!
  wardStageProgressCreate(data: WardStageProgressCreateInput!): WardStageProgressDto!
  wardStageProgressUpdate(data: WardStageProgressUpdateInput!): WardStageProgressDto!
  wardStageProgressDelete(data: WardStageProgressDeleteInput!): Int!
  wardStageCreate(data: WardStageCreateInput!): WardStageDto!
  wardStageUpdate(data: WardStageUpdateInput!): WardStageDto!
  wardStageDelete(data: WardStageDeleteInput!): Int!
  wardCreate(data: WardCreateInput!): WardDto!
  wardUpdate(data: WardUpdateInput!): WardDto!
  wardDelete(data: WardDeleteInput!): Int!
  whatAboutUsCreate(data: WhatAboutUsCreateInput!): WhatAboutUsDto!
  whatAboutUsUpdate(data: WhatAboutUsUpdateInput!): WhatAboutUsDto!
  whatAboutUsDelete(data: WhatAboutUsDeleteInput!): Int!
}

input UserCreateInput {
  firstName: String
  middleName: String
  secondName: String
  username: String!
  passwordHash: String!
  email: String
  phone: String
  rem: String
  roleId: String!
}

input UserUpdateInput {
  id: Int!
  firstName: String
  middleName: String
  secondName: String
  username: String!
  passwordHash: String!
  email: String
  phone: String
  rem: String
  roleId: String!
  version: Int!
}

input UserDeleteInput {
  id: Int!
  version: Int!
}

input AgreementStatusCreateInput {
  agreementStatusName: String!
  style: String
}

input AgreementStatusUpdateInput {
  id: Int!
  agreementStatusName: String!
  style: String
  version: Int!
}

input AgreementStatusDeleteInput {
  id: Int!
  version: Int!
}

input AgreementCreateInput {
  agreementNumber: String!
  agreementDate: DateTime!
  userId: Int!
  customerId: Int!
  wardId: Int!
  agreementStatusId: Int!
  rem: String
}

input AgreementUpdateInput {
  id: Int!
  agreementNumber: String!
  agreementDate: DateTime!
  userId: Int!
  customerId: Int!
  wardId: Int!
  agreementStatusId: Int!
  rem: String
  version: Int!
}

input AgreementDeleteInput {
  id: Int!
  version: Int!
}

input BonusCategoryCreateInput {
  bonusCategoryName: String!
}

input BonusCategoryUpdateInput {
  id: Int!
  bonusCategoryName: String!
  version: Int!
}

input BonusCategoryDeleteInput {
  id: Int!
  version: Int!
}

input BonusCreateInput {
  bonusCategoryId: Int!
  bonusName: String!
  cost: Float!
  rem: String
  isCurrentOffer: Boolean!
}

input BonusUpdateInput {
  id: Int!
  bonusCategoryId: Int!
  bonusName: String!
  cost: Float!
  rem: String
  isCurrentOffer: Boolean!
  version: Int!
}

input BonusDeleteInput {
  id: Int!
  version: Int!
}

input CityCreateInput {
  cityName: String!
}

input CityUpdateInput {
  id: Int!
  cityName: String!
  version: Int!
}

input CityDeleteInput {
  id: Int!
  version: Int!
}

input CustomerCategoryCreateInput {
  customerCategoryName: String!
}

input CustomerCategoryUpdateInput {
  id: Int!
  customerCategoryName: String!
  version: Int!
}

input CustomerCategoryDeleteInput {
  id: Int!
  version: Int!
}

input CustomerCreateInput {
  userId: Int!
  customerName: String!
  subjectCategoryId: Int
  subjectId: Int
  phone: String
  email: String
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  cityId: Int
  street: String
  apartment: String
  house: String
  customerCategoryId: Int
  paymentFormId: Int
  companyName: String
  whatAboutUsId: Int
  rem: String
}

input CustomerUpdateInput {
  id: Int!
  userId: Int!
  customerName: String!
  subjectCategoryId: Int
  subjectId: Int
  phone: String
  email: String
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  cityId: Int
  street: String
  apartment: String
  house: String
  customerCategoryId: Int
  paymentFormId: Int
  companyName: String
  whatAboutUsId: Int
  rem: String
  version: Int!
}

input CustomerDeleteInput {
  id: Int!
  version: Int!
}

input DistrictCreateInput {
  districtName: String!
  cityId: Int!
}

input DistrictUpdateInput {
  id: Int!
  districtName: String!
  cityId: Int!
  version: Int!
}

input DistrictDeleteInput {
  id: Int!
  version: Int!
}

input EmployeeBonusCreateInput {
  userId: Int!
  employeeId: Int!
  bonusDate: DateTime!
  bonusCategoryId: Int!
  bonusId: Int!
  cost: Float!
  rem: String
}

input EmployeeBonusUpdateInput {
  id: Int!
  userId: Int!
  employeeId: Int!
  bonusDate: DateTime!
  bonusCategoryId: Int!
  bonusId: Int!
  cost: Float!
  rem: String
  version: Int!
}

input EmployeeBonusDeleteInput {
  id: Int!
  version: Int!
}

input EmployeePositionCreateInput {
  userId: Int!
  employeeId: Int!
  positionDateStart: DateTime!
  positionDateEnd: DateTime!
  positionId: Int!
  tariff: Float!
  rem: String
}

input EmployeePositionUpdateInput {
  id: Int!
  userId: Int!
  employeeId: Int!
  positionDateStart: DateTime!
  positionDateEnd: DateTime!
  positionId: Int!
  tariff: Float!
  rem: String
  version: Int!
}

input EmployeePositionDeleteInput {
  id: Int!
  version: Int!
}

input EmployeeStatusCreateInput {
  employeeStatusName: String!
  isEmployeeGroup: Boolean!
  isTimesheetGroup: Boolean!
}

input EmployeeStatusUpdateInput {
  id: Int!
  employeeStatusName: String!
  isEmployeeGroup: Boolean!
  isTimesheetGroup: Boolean!
  version: Int!
}

input EmployeeStatusDeleteInput {
  id: Int!
  version: Int!
}

input EmployeeCreateInput {
  userId: Int!
  employeeName: String!
  hbDate: DateTime
  cityId: Int
  districtId: Int
  quarterId: Int
  street: String
  house: String
  apartment: String
  education: String
  phone: String
  email: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  employeeStatusId: Int
  operationModeId: Int
  typeJobsIds: [Int!]
  rem: String
}

input EmployeeUpdateInput {
  id: Int!
  userId: Int!
  employeeName: String!
  hbDate: DateTime
  cityId: Int
  districtId: Int
  quarterId: Int
  street: String
  house: String
  apartment: String
  education: String
  phone: String
  email: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  employeeStatusId: Int
  operationModeId: Int
  typeJobsIds: [Int!]
  rem: String
  version: Int!
}

input EmployeeDeleteInput {
  id: Int!
  version: Int!
}

input FamilyStatusCreateInput {
  familyStatusName: String!
}

input FamilyStatusUpdateInput {
  id: Int!
  familyStatusName: String!
  version: Int!
}

input FamilyStatusDeleteInput {
  id: Int!
  version: Int!
}

input OperationModeCreateInput {
  operationModeName: String!
}

input OperationModeUpdateInput {
  id: Int!
  operationModeName: String!
  version: Int!
}

input OperationModeDeleteInput {
  id: Int!
  version: Int!
}

input PaymentFormCreateInput {
  paymentFormName: String!
}

input PaymentFormUpdateInput {
  id: Int!
  paymentFormName: String!
  version: Int!
}

input PaymentFormDeleteInput {
  id: Int!
  version: Int!
}

input PositionCreateInput {
  positionName: String!
  tariff: Float!
  isCurrentOffer: Boolean!
}

input PositionUpdateInput {
  id: Int!
  positionName: String!
  tariff: Float!
  isCurrentOffer: Boolean!
  version: Int!
}

input PositionDeleteInput {
  id: Int!
  version: Int!
}

input QuarterCreateInput {
  quarterName: String!
  districtId: Int!
}

input QuarterUpdateInput {
  id: Int!
  quarterName: String!
  districtId: Int!
  version: Int!
}

input QuarterDeleteInput {
  id: Int!
  version: Int!
}

input SocialStatusCreateInput {
  socialStatusName: String!
}

input SocialStatusUpdateInput {
  id: Int!
  socialStatusName: String!
  version: Int!
}

input SocialStatusDeleteInput {
  id: Int!
  version: Int!
}

input SubjectCategoryCreateInput {
  subjectCategoryName: String!
}

input SubjectCategoryUpdateInput {
  id: Int!
  subjectCategoryName: String!
  version: Int!
}

input SubjectCategoryDeleteInput {
  id: Int!
  version: Int!
}

input SubjectCreateInput {
  subjectName: String!
  subjectCategoryId: Int!
}

input SubjectUpdateInput {
  id: Int!
  subjectName: String!
  subjectCategoryId: Int!
  version: Int!
}

input SubjectDeleteInput {
  id: Int!
  version: Int!
}

input TypeJobCreateInput {
  typeJobName: String!
}

input TypeJobUpdateInput {
  id: Int!
  typeJobName: String!
  version: Int!
}

input TypeJobDeleteInput {
  id: Int!
  version: Int!
}

input UserRoleCreateInput {
  id: String!
  roleDescription: String
}

input UserRoleUpdateInput {
  id: String!
  roleDescription: String
  version: Int!
}

input UserRoleDeleteInput {
  id: String!
  version: Int!
}

input WardStageProgressCreateInput {
  wardStageDate: DateTime!
  wardStageId: Int!
  wardId: Int!
  rem: String
}

input WardStageProgressUpdateInput {
  id: Int!
  wardStageDate: DateTime!
  wardStageId: Int!
  wardId: Int!
  rem: String
  version: Int!
}

input WardStageProgressDeleteInput {
  id: Int!
  version: Int!
}

input WardStageCreateInput {
  wardStageName: String!
}

input WardStageUpdateInput {
  id: Int!
  wardStageName: String!
  version: Int!
}

input WardStageDeleteInput {
  id: Int!
  version: Int!
}

input WardCreateInput {
  userId: Int!
  customerId: Int
  wardName: String
  hbDate: DateTime
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  socialStatusesIds: [Int!]
  familyStatusId: Int
  cityId: Int
  districtId: Int
  quarterId: Int
  street: String
  house: String
  apartment: String
  floor: String
  entrance: String
  phone: String
  doctorsReport: Boolean
  events: String
  rem: String
}

input WardUpdateInput {
  id: Int!
  userId: Int!
  customerId: Int
  wardName: String
  hbDate: DateTime
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  socialStatusesIds: [Int!]
  familyStatusId: Int
  cityId: Int
  districtId: Int
  quarterId: Int
  street: String
  house: String
  apartment: String
  floor: String
  entrance: String
  phone: String
  doctorsReport: Boolean
  events: String
  rem: String
  version: Int!
}

input WardDeleteInput {
  id: Int!
  version: Int!
}

input WhatAboutUsCreateInput {
  whatAboutUsName: String!
}

input WhatAboutUsUpdateInput {
  id: Int!
  whatAboutUsName: String!
  version: Int!
}

input WhatAboutUsDeleteInput {
  id: Int!
  version: Int!
}
