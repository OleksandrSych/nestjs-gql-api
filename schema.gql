# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AgreementDto {
  id: ID!
  numAgreement: String!
  user: UserDto!
  dateAgreement: DateTime!
}

input CityCreateInput {
  cityName: String!
}

input CityDeleteInput {
  id: Int!
}

type CityDto {
  id: ID
  cityName: String
}

input CityUpdateInput {
  id: Int!
  cityName: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  userCreate(data: UserCreateInput!): UserDto!
  userUpdate(data: UserUpdateInput!): UserDto!
  userDelete(data: UserDeleteInput!): Float!
  cityCreate(data: CityCreateInput!): CityDto!
  cityUpdate(data: CityUpdateInput!): CityDto!
  cityDelete(data: CityDeleteInput!): Float!
  userRoleCreate(data: UserRoleCreateInput!): UserRoleDto!
  userRoleUpdate(data: UserRoleUpdateInput!): UserRoleDto!
  userRoleDelete(data: UserRoleDeleteInput!): UserRoleDto!
}

type Query {
  agreementsFiltered(numAgreements: [String!]): [AgreementDto!]!
  user(id: Int!): UserDto

  """Поиск пользователей по ФИО и пагинация"""
  userList(textFilter: String, paging: Int!, page: Int!): [UserDto!]!
  usersFind(ids: [Int!], usernames: [String!]): [UserDto!]!

  """Поиск населённого пункта по id"""
  city(id: Int!): CityDto

  """Поиск населённого пункта по наименованию и пагинация"""
  cityList(textFilter: String, paging: Int!, page: Int!): [CityDto!]!

  """Роль пользователя"""
  userRole(id: String!): UserRoleDto!
  userRolesFind(ids: [String!]): [UserRoleDto!]!
}

input UserCreateInput {
  firstName: String
  middleName: String
  secondName: String
  username: String!
  passwordHash: String!
  email: String
  phone: String
  rem: String
  roleId: String!
}

input UserDeleteInput {
  id: Int!
}

type UserDto {
  id: ID
  firstName: String
  middleName: String
  secondName: String
  displayName: String
  username: String
  email: String
  phone: String
  rem: String
  role: UserRoleDto
}

input UserRoleCreateInput {
  id: String!
  roleDescription: String
}

input UserRoleDeleteInput {
  id: String!
}

type UserRoleDto {
  id: String
  roleDescription: String
}

input UserRoleUpdateInput {
  id: String!
  roleDescription: String
}

input UserUpdateInput {
  id: Int!
  firstName: String
  middleName: String
  secondName: String
  username: String!
  passwordHash: String!
  email: String
  phone: String
  rem: String
  roleId: String!
}
